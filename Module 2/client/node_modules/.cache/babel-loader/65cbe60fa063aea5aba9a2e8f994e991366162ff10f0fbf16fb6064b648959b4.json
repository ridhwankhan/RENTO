{"ast":null,"code":"var _jsxFileName = \"D:\\\\BRAC university\\\\CSE\\\\CSE471\\\\Module 2\\\\client\\\\src\\\\components\\\\SimpleMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Fix Leaflet icon issue\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png'\n});\nconst SimpleMap = ({\n  onLocationSelect,\n  initialPosition,\n  mapId\n}) => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [marker, setMarker] = useState(null);\n\n  // Initialize map\n  useEffect(() => {\n    // Default position (Dhaka, Bangladesh)\n    const defaultPosition = [23.8103, 90.4125];\n    const position = initialPosition || defaultPosition;\n\n    // Create map instance\n    const mapInstance = L.map(mapId).setView(position, 13);\n\n    // Add tile layer\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(mapInstance);\n\n    // Add initial marker if position is provided\n    let markerInstance = null;\n    if (initialPosition) {\n      markerInstance = L.marker(position, {\n        draggable: true\n      }).addTo(mapInstance);\n\n      // Handle marker drag\n      markerInstance.on('dragend', function (e) {\n        const position = e.target.getLatLng();\n        if (onLocationSelect) {\n          onLocationSelect({\n            lat: position.lat,\n            lng: position.lng\n          });\n        }\n      });\n    }\n\n    // Handle map click\n    mapInstance.on('click', function (e) {\n      const {\n        lat,\n        lng\n      } = e.latlng;\n\n      // Remove existing marker\n      if (markerInstance) {\n        mapInstance.removeLayer(markerInstance);\n      }\n\n      // Add new marker\n      markerInstance = L.marker([lat, lng], {\n        draggable: true\n      }).addTo(mapInstance);\n\n      // Handle marker drag\n      markerInstance.on('dragend', function (e) {\n        const position = e.target.getLatLng();\n        if (onLocationSelect) {\n          onLocationSelect({\n            lat: position.lat,\n            lng: position.lng\n          });\n        }\n      });\n\n      // Call callback\n      if (onLocationSelect) {\n        onLocationSelect({\n          lat: lat,\n          lng: lng\n        });\n      }\n      setMarker(markerInstance);\n    });\n    setMap(mapInstance);\n    setMarker(markerInstance);\n\n    // Cleanup\n    return () => {\n      if (mapInstance) {\n        mapInstance.remove();\n      }\n    };\n  }, [mapId, initialPosition, onLocationSelect]);\n\n  // Update marker position when initialPosition changes\n  useEffect(() => {\n    if (map && initialPosition) {\n      // Remove existing marker\n      if (marker) {\n        map.removeLayer(marker);\n      }\n\n      // Add new marker\n      const newMarker = L.marker([initialPosition.lat, initialPosition.lng], {\n        draggable: true\n      }).addTo(map);\n\n      // Handle marker drag\n      newMarker.on('dragend', function (e) {\n        const position = e.target.getLatLng();\n        if (onLocationSelect) {\n          onLocationSelect({\n            lat: position.lat,\n            lng: position.lng\n          });\n        }\n      });\n      setMarker(newMarker);\n\n      // Center map on marker\n      map.setView([initialPosition.lat, initialPosition.lng], map.getZoom());\n    }\n  }, [map, initialPosition, onLocationSelect]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: mapId,\n    style: {\n      width: '100%',\n      height: '500px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 10\n  }, this);\n};\n_s(SimpleMap, \"SE6FL6wW3li3v9NT9rhn6MgWxo8=\");\n_c = SimpleMap;\nexport default SimpleMap;\nvar _c;\n$RefreshReg$(_c, \"SimpleMap\");","map":{"version":3,"names":["React","useState","useEffect","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","SimpleMap","onLocationSelect","initialPosition","mapId","_s","map","setMap","marker","setMarker","defaultPosition","position","mapInstance","setView","tileLayer","attribution","addTo","markerInstance","draggable","on","e","target","getLatLng","lat","lng","latlng","removeLayer","remove","newMarker","getZoom","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/BRAC university/CSE/CSE471/Module 2/client/src/components/SimpleMap.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Fix Leaflet icon issue\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\n});\n\nconst SimpleMap = ({ onLocationSelect, initialPosition, mapId }) => {\n  const [map, setMap] = useState(null);\n  const [marker, setMarker] = useState(null);\n\n  // Initialize map\n  useEffect(() => {\n    // Default position (Dhaka, Bangladesh)\n    const defaultPosition = [23.8103, 90.4125];\n    const position = initialPosition || defaultPosition;\n    \n    // Create map instance\n    const mapInstance = L.map(mapId).setView(position, 13);\n    \n    // Add tile layer\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(mapInstance);\n    \n    // Add initial marker if position is provided\n    let markerInstance = null;\n    if (initialPosition) {\n      markerInstance = L.marker(position, { draggable: true }).addTo(mapInstance);\n      \n      // Handle marker drag\n      markerInstance.on('dragend', function(e) {\n        const position = e.target.getLatLng();\n        if (onLocationSelect) {\n          onLocationSelect({\n            lat: position.lat,\n            lng: position.lng\n          });\n        }\n      });\n    }\n    \n    // Handle map click\n    mapInstance.on('click', function(e) {\n      const { lat, lng } = e.latlng;\n      \n      // Remove existing marker\n      if (markerInstance) {\n        mapInstance.removeLayer(markerInstance);\n      }\n      \n      // Add new marker\n      markerInstance = L.marker([lat, lng], { draggable: true }).addTo(mapInstance);\n      \n      // Handle marker drag\n      markerInstance.on('dragend', function(e) {\n        const position = e.target.getLatLng();\n        if (onLocationSelect) {\n          onLocationSelect({\n            lat: position.lat,\n            lng: position.lng\n          });\n        }\n      });\n      \n      // Call callback\n      if (onLocationSelect) {\n        onLocationSelect({\n          lat: lat,\n          lng: lng\n        });\n      }\n      \n      setMarker(markerInstance);\n    });\n    \n    setMap(mapInstance);\n    setMarker(markerInstance);\n    \n    // Cleanup\n    return () => {\n      if (mapInstance) {\n        mapInstance.remove();\n      }\n    };\n  }, [mapId, initialPosition, onLocationSelect]);\n  \n  // Update marker position when initialPosition changes\n  useEffect(() => {\n    if (map && initialPosition) {\n      // Remove existing marker\n      if (marker) {\n        map.removeLayer(marker);\n      }\n      \n      // Add new marker\n      const newMarker = L.marker([initialPosition.lat, initialPosition.lng], { draggable: true }).addTo(map);\n      \n      // Handle marker drag\n      newMarker.on('dragend', function(e) {\n        const position = e.target.getLatLng();\n        if (onLocationSelect) {\n          onLocationSelect({\n            lat: position.lat,\n            lng: position.lng\n          });\n        }\n      });\n      \n      setMarker(newMarker);\n      \n      // Center map on marker\n      map.setView([initialPosition.lat, initialPosition.lng], map.getZoom());\n    }\n  }, [map, initialPosition, onLocationSelect]);\n  \n  return <div id={mapId} style={{ width: '100%', height: '500px' }}></div>;\n};\n\nexport default SimpleMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}