{"ast":null,"code":"var _jsxFileName = \"D:\\\\BRAC university\\\\CSE\\\\CSE471\\\\Module 2\\\\client\\\\src\\\\components\\\\SimpleMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Fix Leaflet icon issue\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png'\n});\nconst SimpleMap = ({\n  onLocationSelect,\n  initialPosition,\n  mapId\n}) => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [marker, setMarker] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const mapContainerRef = useRef(null);\n\n  // Initialize map\n  useEffect(() => {\n    if (!mapContainerRef.current) return;\n\n    // Default position (Dhaka, Bangladesh)\n    const defaultPosition = [23.8103, 90.4125];\n    const position = initialPosition ? [initialPosition.lat, initialPosition.lng] : defaultPosition;\n\n    // Create map instance\n    const mapInstance = L.map(mapContainerRef.current).setView(position, 13);\n\n    // Add tile layer\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(mapInstance);\n\n    // Add initial marker if position is provided\n    let markerInstance = null;\n    if (initialPosition) {\n      markerInstance = L.marker(position).addTo(mapInstance);\n    }\n\n    // Handle map click\n    mapInstance.on('click', function (e) {\n      const {\n        lat,\n        lng\n      } = e.latlng;\n\n      // Remove existing marker\n      if (markerInstance) {\n        mapInstance.removeLayer(markerInstance);\n      }\n\n      // Add new marker\n      markerInstance = L.marker([lat, lng]).addTo(mapInstance);\n\n      // Call callback\n      if (onLocationSelect) {\n        onLocationSelect({\n          lat: lat,\n          lng: lng\n        });\n      }\n      setMarker(markerInstance);\n    });\n    setMap(mapInstance);\n    setMarker(markerInstance);\n\n    // Cleanup\n    return () => {\n      if (mapInstance) {\n        mapInstance.remove();\n      }\n    };\n  }, [mapId, initialPosition, onLocationSelect]);\n\n  // Handle search\n  const handleSearch = async () => {\n    if (!searchQuery.trim() || !map) return;\n    try {\n      // Using Nominatim for geocoding (free and open-source)\n      const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(searchQuery)}`);\n      const data = await response.json();\n      if (data && data.length > 0) {\n        const lat = parseFloat(data[0].lat);\n        const lng = parseFloat(data[0].lon);\n\n        // Remove existing marker\n        if (marker) {\n          map.removeLayer(marker);\n        }\n\n        // Add new marker\n        const newMarker = L.marker([lat, lng]).addTo(map);\n        setMarker(newMarker);\n\n        // Center map on search result\n        map.setView([lat, lng], 13);\n\n        // Call callback\n        if (onLocationSelect) {\n          onLocationSelect({\n            lat: lat,\n            lng: lng\n          });\n        }\n      } else {\n        alert(\"Location not found. Please try a different search term.\");\n      }\n    } catch (error) {\n      console.error(\"Error searching for location:\", error);\n      alert(\"Error searching for location. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for a location\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && handleSearch()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainerRef,\n      style: {\n        width: '100%',\n        height: '500px',\n        marginTop: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleMap, \"V7keoWanMfHhF/A/4HkbWfeHDfo=\");\n_c = SimpleMap;\nexport default SimpleMap;\nvar _c;\n$RefreshReg$(_c, \"SimpleMap\");","map":{"version":3,"names":["React","useState","useEffect","useRef","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","SimpleMap","onLocationSelect","initialPosition","mapId","_s","map","setMap","marker","setMarker","searchQuery","setSearchQuery","mapContainerRef","current","defaultPosition","position","lat","lng","mapInstance","setView","tileLayer","attribution","addTo","markerInstance","on","e","latlng","removeLayer","remove","handleSearch","trim","response","fetch","encodeURIComponent","data","json","length","parseFloat","lon","newMarker","alert","error","console","children","className","type","placeholder","value","onChange","target","onKeyPress","key","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","style","width","height","marginTop","_c","$RefreshReg$"],"sources":["D:/BRAC university/CSE/CSE471/Module 2/client/src/components/SimpleMap.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Fix Leaflet icon issue\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\n});\n\nconst SimpleMap = ({ onLocationSelect, initialPosition, mapId }) => {\n  const [map, setMap] = useState(null);\n  const [marker, setMarker] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const mapContainerRef = useRef(null);\n\n  // Initialize map\n  useEffect(() => {\n    if (!mapContainerRef.current) return;\n\n    // Default position (Dhaka, Bangladesh)\n    const defaultPosition = [23.8103, 90.4125];\n    const position = initialPosition ? [initialPosition.lat, initialPosition.lng] : defaultPosition;\n\n    // Create map instance\n    const mapInstance = L.map(mapContainerRef.current).setView(position, 13);\n\n    // Add tile layer\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(mapInstance);\n\n    // Add initial marker if position is provided\n    let markerInstance = null;\n    if (initialPosition) {\n      markerInstance = L.marker(position).addTo(mapInstance);\n    }\n\n    // Handle map click\n    mapInstance.on('click', function(e) {\n      const { lat, lng } = e.latlng;\n\n      // Remove existing marker\n      if (markerInstance) {\n        mapInstance.removeLayer(markerInstance);\n      }\n\n      // Add new marker\n      markerInstance = L.marker([lat, lng]).addTo(mapInstance);\n\n      // Call callback\n      if (onLocationSelect) {\n        onLocationSelect({\n          lat: lat,\n          lng: lng\n        });\n      }\n\n      setMarker(markerInstance);\n    });\n\n    setMap(mapInstance);\n    setMarker(markerInstance);\n\n    // Cleanup\n    return () => {\n      if (mapInstance) {\n        mapInstance.remove();\n      }\n    };\n  }, [mapId, initialPosition, onLocationSelect]);\n\n  // Handle search\n  const handleSearch = async () => {\n    if (!searchQuery.trim() || !map) return;\n\n    try {\n      // Using Nominatim for geocoding (free and open-source)\n      const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(searchQuery)}`);\n      const data = await response.json();\n\n      if (data && data.length > 0) {\n        const lat = parseFloat(data[0].lat);\n        const lng = parseFloat(data[0].lon);\n\n        // Remove existing marker\n        if (marker) {\n          map.removeLayer(marker);\n        }\n\n        // Add new marker\n        const newMarker = L.marker([lat, lng]).addTo(map);\n        setMarker(newMarker);\n\n        // Center map on search result\n        map.setView([lat, lng], 13);\n\n        // Call callback\n        if (onLocationSelect) {\n          onLocationSelect({\n            lat: lat,\n            lng: lng\n          });\n        }\n      } else {\n        alert(\"Location not found. Please try a different search term.\");\n      }\n    } catch (error) {\n      console.error(\"Error searching for location:\", error);\n      alert(\"Error searching for location. Please try again.\");\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"search-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Search for a location\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          onKeyPress={(e) => e.key === 'Enter' && handleSearch()}\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n      <div\n        ref={mapContainerRef}\n        style={{ width: '100%', height: '500px', marginTop: '10px' }}\n      ></div>\n    </div>\n  );\n};\n\nexport default SimpleMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}